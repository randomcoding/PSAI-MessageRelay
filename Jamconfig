CMD.CC ?= gcc ;
COMPILER.C.TYPE ?= GCC ;
COMPILER.TYPE = GCC ;
COMPILER.C.VERSION ?= 4.3.2 ;
COMPILER.VERSION = 4.3.2 ;
COMPILER.C.VERSION_LIST ?= 4 3 2 ;
COMPILER.VERSION_LIST = 4 3 2 ;
COMPILER.CFLAGS += -pipe ;
CMD.C++ ?= g++ ;
COMPILER.C++.TYPE ?= GCC ;
COMPILER.TYPE = GCC ;
COMPILER.C++.VERSION ?= 4.3.2 ;
COMPILER.VERSION = 4.3.2 ;
COMPILER.C++.VERSION_LIST ?= 4 3 2 ;
COMPILER.VERSION_LIST = 4 3 2 ;
COMPILER.C++FLAGS.PIC ?= -fPIC ;
CMD.LINK ?= $(CMD.C++) ;
CMD.LD ?= ld ;
PLUGIN.LFLAGS += -shared ;
PLUGIN.LFLAGS.USE_SONAME ?= yes ;
LINKER.RESPONSEFILES ?= yes ;
CMD.LINK += -Wl,--as-needed ;
LINK.GC_SECTIONS ?= -Wl,--gc-sections ;
RANLIB = ranlib ;
CMD.STRINGS ?= strings ;
CMD.OBJCOPY ?= objcopy ;
LIBTOOL ?= /usr/bin/libtool ;
CMD.MKDIR ?= mkdir ;
CMD.MKDIRS ?= mkdir -p ;
INSTALL ?= install ;
LN_S ?= ln -s ;
TARGET.PROCESSOR ?= X86 ;
TARGET.OS ?= UNIX ;
TARGET.OS.NORMALIZED ?= Unix ;
TARGET.PROCESSORSIZE ?= 64 ;
COMPILER.CFLAGS.debug += -Wall ;
COMPILER.CFLAGS += -march=k8 ;
LINK.DEBUG.INFO.SEPARATE ?= yes ;
COMPILER.CFLAGS.debug += -g3 ;
COMPILER.LFLAGS.debug += -g3 ;
COMPILER.CFLAGS.optimize += -g2 ;
COMPILER.LFLAGS.optimize += -g2 ;
COMPILER.CFLAGS.optimize += -O3 ;
COMPILER.CFLAGS.optimize += -fomit-frame-pointer ;
COMPILER.CFLAGS.optimize += -ffast-math ;
COMPILER.C++FLAGS += -fvisibility-inlines-hidden ;
COMPILER.CFLAGS += -fvisibility=hidden ;
COMPILER.CFLAGS.VISIBILITY_DEFAULT ?= -fvisibility=default ;

# set this to debug or optimize depending on whether or not you configured PlaneShift with debug or not
PS.BUILD.TYPE ?= optimize ;

# set the version of the Crystal Space library.
CS.VERSION ?= 2.1 ;

CRYSTAL.AVAILABLE ?= yes ;
CRYSTAL.VERSION ?= 1.4 ;
CRYSTAL.CFLAGS ?= -I$(CRYSTAL.DIR)/include ;
CRYSTAL.LFLAGS ?= -L$(CRYSTAL.DIR)/out/linux/optimize/libs -lcrystalspace-$(CS.VERSION) -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;
CRYSTAL.INCLUDE_DIR ?= $(CRYSTAL.DIR)/include ;
CRYSTAL.AVAILABLE_LIBS ?= crystalspace crystalspace_opengl ;
CRYSTAL.STATICDEPS ?= $(CRYSTAL.DIR)/pace/out/linux/optimize/libs/crystalspace_staticplugins.jam ;

CAL3D.AVAILABLE ?= yes ;
CAL3D.CFLAGS ?= -I$(CAL3D.DIR)/src ;
CAL3D.LFLAGS ?= -L$(CAL3D.DIR)/src/cal3d/.libs -lcal3d -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;
CAL3D.INCLUDE_DIR ?= $(CAL3D.DIR)/src ;

PS.VERSION ?= 0.5 ;
PS.INCLUDES ?= -I$(PS.DIR)/include -I$(PS.DIR)/src/client -I$(PS.DIR)/src/common -I$(PS.DIR)/src/eedit -I$(PS.DIR)/src/npcclient -I$(PS.DIR)/src/pslaunch -I$(PS.DIR)/src/server -I$(PS.DIR)/src/setup -I$(PS.DIR)/src/tools ;
PS.LIB_DIR ?= $(PS.DIR)/out/linux/$(PS.BUILD.TYPE)/libs ;

PSENGINE.AVAILABLE ?= yes ;
PSENGINE.CFLAGS ?= $(PS.INCLUDES) ;
PSENGINE.LFLAGS ?= -L$(PS.LIB_DIR) -lpsengine-$(PS.VERSION) -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;

PSNET.AVAILABLE ?= yes ;
PSNET.CFLAGS ?= $(PS.INCLUDES) ;
PSNET.LFLAGS ?= -L$(PS.LIB_DIR) -lpsnet-$(PS.VERSION) -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;

PSUTIL.AVAILABLE ?= yes ;
PSUTIL.CFLAGS ?= $(PS.INCLUDES) ;
PSUTIL.LFLAGS ?= -L$(PS.LIB_DIR) -lpsutil-$(PS.VERSION) -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;

PSPAWS.AVAILABLE ?= yes ;
PSPAWS.CFLAGS ?= $(PS.INCLUDES) ;
PSPAWS.LFLAGS ?= -L$(PS.LIB_DIR) -lpaws-$(PS.VERSION) -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;

PSGUI.AVAILABLE ?= yes ;
PSGUI.CFLAGS ?= $(PS.INCLUDES) ;
PSGUI.LFLAGS ?= -L$(PS.LIB_DIR) -lgui-$(PS.VERSION) -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;

PS_ALL.AVAILABLE ?= yes ;
PS_ALL.CFLAGS ?= $(PS.INCLUDES) ;
PS_ALL.LFLAGS ?= -L$(PS.LIB_DIR) -lgui-$(PS.VERSION) -lpsengine-$(PS.VERSION) -lpsnet-$(PS.VERSION) -lpsutil-$(PS.VERSION) -lpaws-$(PS.VERSION) -lpsrpgrules-$(PS.VERSION)  -leffects-$(PS.VERSION) -lfparser-$(PS.VERSION) -lz -lpthread -lc -lm -ldl -lnsl -L/usr/local/lib ;

# removed libs -lbulkobjects-$(PS.VERSION)

GTEST.AVAILABLE ?= yes ;
GTEST.CFLAGS ?= -I$(GTEST.DIR)/include ;
GTEST.LFLAGS ?= -L$(GTEST.DIR)/lib -lgtest ;
GTEST.INCLUDE_DIR ?= $(GTEST.DIR)/include ;

XML_LIBS.AVAILABLE ?= yes ;
XML_LIBS.CFLAGS ?= -I/usr/include ;
XML_LIBS.LFLAGS ?= -L/usr/lib -lxerces-c ;
XML_LIBS.INCLUDE_DIR ?= /usr/include ;

LIBMYSQLCLIENT.AVAILABLE ?= yes ;
LIBMYSQLCLIENT.CFLAGS ?= -I/usr/include/mysql ;
LIBMYSQLCLIENT.LFLAGS ?= -L/usr/lib -lmysqlclient ;
TTREE ?= /usr/bin/ttree ;

EMBED_META ?= yes ;
OBJCOPY.AVAILABLE ?= yes ;
CMD.OBJCOPY ?= objcopy ;
ELF.AVAILABLE ?= yes ;
COMPILER.CFLAGS += $(EMBED_META.CFLAGS) ;
COMPILER.LFLAGS += $(EMBED_META.LFLAGS) ;
MEMORY_TRACKER ?= no ;
REF_TRACKER ?= no ;
MODE ?= optimize ;
prefix ?= /usr/local/planeshift ;
exec_prefix ?= $(prefix) ;
bindir ?= $(exec_prefix)/bin ;
sbindir ?= $(exec_prefix)/sbin ;
libexecdir ?= $(exec_prefix)/libexec ;
datarootdir ?= $(prefix)/share ;
datadir ?= $(datarootdir) ;
sysconfdir ?= $(prefix)/etc ;
sharedstatedir ?= $(prefix)/com ;
localstatedir ?= $(prefix)/var ;
libdir ?= $(exec_prefix)/lib ;
includedir ?= $(prefix)/include ;
oldincludedir ?= /usr/include ;
infodir ?= $(datarootdir)/info ;
mandir ?= $(datarootdir)/man ;
PACKAGE_NAME ?= "PSAI" ;
PACKAGE_VERSION ?= "0.1.0" ;
PACKAGE_STRING ?= "PSAI 0.1.0" ;
PACKAGE_BUGREPORT ?= "randomcoder@randomcoding.co.uk" ;
PACKAGE_LONGNAME ?= "PSAI: An advanced AI player character for PlaneShift" ;
PACKAGE_HOMEPAGE ?= "http://www.planeshift.it" ;
PACKAGE_COPYRIGHT ?= "Copyright (C)2008 by RandomCoder" ;
PACKAGE_VERSION_LIST += "0" ;
PACKAGE_VERSION_LIST += "1" ;
PACKAGE_VERSION_LIST += "0" ;
